#include <stdio.h>
const int len = 1000001;
int a[1000002] = { 0 };
int b[1000002] = { 0 };

int main() {
	a[0] = 1;
	a[1] = 1;
	for (int i = 2; i*i<= len; i++) {
		if (a[i] == 0) {
			for (int j = 2 * i; j <= len; j += i) {
				a[j] = 1;
			}
		}
	}
	//这道题的思路：类似于前缀和，我们将每个数作为一个新数组的下标起来
	//然后在数组中的数据就用来储存这个数字的质因数组成之和为多少
	//假如储存了一个数的质因数之和，如8= 2*4  ->3  那么用数组的好处就是运算时可以将之前储存的4的质因数之合直接加上
	//8 = 2*4    4 = 2*2,12 = 2*6   我们在6处已经储存了2，那么系数和就为3
	for (int i = 2; i <= len; i++) {
		if (a[i] == 0) {//从2开始依次向上,再从下一个3开始继续向上
			b[i] = 1;//初始质因数本身就有一个系数1{
			for (int j = 2; i * j <= len; j++) {
				b[i * j] = b[i] + b[j];
			}
		}
	}
	for (int i = 1; i <= len; i++) {
		b[i] += b[i - 1];//这里就开始前缀和了，统计某数前面的质因数指数和
		//这样这道题要求的是，求某个数的质因数的指数和到另一个数的质因数和之间的所有数字的质因数指数之和相加
	}
	int t;
	scanf("%d", &t);
	while (t--) {
		int x, y;
		scanf("%d %d", &x, &y);
		int count = b[y] - b[x - 1];//注意，如果说，两个输入的数据相等的话，不可能为0，所以以后面一个为准
		printf("%d\n", count);
		
	}
}
